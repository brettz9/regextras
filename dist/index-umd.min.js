!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.RegExtras={})}(this,function(e){"use strict";function t(e,t,n=e.lastIndex){return t=t||"",(e=new RegExp(e.source,(t.includes("g")?"g":e.global?"g":"")+(t.includes("i")?"i":e.ignoreCase?"i":"")+(t.includes("m")?"m":e.multiline?"m":"")+(t.includes("u")?"u":e.sticky?"u":"")+(t.includes("y")?"y":e.sticky?"y":""))).lastIndex=n,e}class n{constructor(e,n,l){this.regex=t("string"==typeof e?new RegExp(e):t(e),n||"",l)}forEach(e,n,l=null){const c=t(this.regex,"g");let r,i,o=0;for(;null!==(r=c.exec(e));)i=r.splice(0,1),n.apply(l,r.concat(o++,i));return this}some(e,n,l=null){const c=t(this.regex,"g");let r,i,o,s=0;for(;null!==(r=c.exec(e));)if(o=r.splice(0,1),i=n.apply(l,r.concat(s++,o)))return!0;return!1}every(e,n,l=null){const c=t(this.regex,"g");let r,i,o,s=0;for(;null!==(r=c.exec(e));)if(o=r.splice(0,1),!(i=n.apply(l,r.concat(s++,o))))return!1;return!0}map(e,n,l=null){const c=[],r=t(this.regex,"g");let i,o,s=0;for(;null!==(i=r.exec(e));)o=i.splice(0,1),c.push(n.apply(l,i.concat(s++,o)));return c}filter(e,n,l=null){let c,r,i=0;const o=[],s=t(this.regex,"g");for(;null!==(c=s.exec(e));)r=c.splice(0,1),c=c.concat(i++,r),n.apply(l,c)&&o.push(r[0]);return o}reduce(e,n,l,c=null){let r,i,o=0;const s=t(this.regex,"g");for(l||null!==(r=s.exec(e))&&(i=r.splice(0,1),l=n.apply(c,[""].concat(r.concat(o++,i))));null!==(r=s.exec(e));)i=r.splice(0,1),l=n.apply(c,[l].concat(r.concat(o++,i)));return l}reduceRight(e,n,l,c){let r,i,o,s=c,u=l;const p=[],x=t(this.regex,"g");for(s=s||null;null!==(r=x.exec(e));)p.push(r);if(!(o=p.length)){if(arguments.length<3)throw new TypeError("reduce of empty matches array with no initial value");return u}return u||(r=p.splice(-1)[0],i=r.splice(0,1),u=n.apply(s,[""].concat(r.concat(o--,i)))),p.reduceRight((e,t)=>(i=t.splice(0,1),u=n.apply(s,[u].concat(t.concat(o--,i))),e),p),u}find(e,n,l=null){let c,r,i,o=0;const s=t(this.regex,"g");for(;null!==(c=s.exec(e));)if(i=c.splice(0,1),r=n.apply(l,c.concat(o++,i)))return i[0];return!1}findIndex(e,n,l=null){const c=t(this.regex,"g");let r,i=0;for(;null!==(r=c.exec(e));){const e=r.splice(0,1);if(n.apply(l,r.concat(i++,e)))return i-1}return-1}findExec(e,n,l=null){const c=t(this.regex,"g");let r,i=0;for(;null!==(r=c.exec(e));){const e=r.splice(0,1);if(n.apply(l,r.concat(i++,e)))return r}return!1}filterExec(e,n,l=null){let c,r,i=0;const o=[],s=t(this.regex,"g");for(;null!==(c=s.exec(e));)r=c.splice(0,1),c.push(i++,r[0]),n.apply(l,c)&&o.push(c);return o}}const l=n;(n=function(...e){return new l(...e)}).prototype=l.prototype,n.mixinRegex=t,function(e){e.prototype.entries=function*(t){let n,l=0;const c=e.mixinRegex(this.regex,"g");for(;null!==(n=c.exec(t));)yield[l++,n]},e.prototype.values=function*(t){let n;const l=e.mixinRegex(this.regex,"g");for(;null!==(n=l.exec(t));)yield n},e.prototype.keys=function*(t){let n=0;const l=e.mixinRegex(this.regex,"g");for(;null!==l.exec(t);)yield n++}}(n),e.mixinRegex=t,e.RegExtras=n,Object.defineProperty(e,"__esModule",{value:!0})});
